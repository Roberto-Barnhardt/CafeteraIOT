[
    {
        "id": "9a2c567d.c9bc58",
        "type": "tab",
        "label": "FOTA",
        "disabled": false,
        "info": ""
    },
    {
        "id": "59b175c6.ffb24c",
        "type": "http response",
        "z": "9a2c567d.c9bc58",
        "name": "OTA Response",
        "statusCode": "",
        "headers": {},
        "x": 2780,
        "y": 780,
        "wires": []
    },
    {
        "id": "d9beced3.f6add",
        "type": "http in",
        "z": "9a2c567d.c9bc58",
        "name": "OTA Manager",
        "url": "/esp8266-ota",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 95.49576568603516,
        "y": 765.1784801483154,
        "wires": [
            [
                "55397768.5b71a8"
            ]
        ]
    },
    {
        "id": "e5efaa43.17c6c8",
        "type": "file",
        "z": "9a2c567d.c9bc58",
        "name": "Save md5 Checksum",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1547.4400024414062,
        "y": 962.7261829376221,
        "wires": [
            []
        ]
    },
    {
        "id": "e7e37fb.655cc8",
        "type": "file in",
        "z": "9a2c567d.c9bc58",
        "name": "Read firmware",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "allProps": false,
        "x": 849.5235595703125,
        "y": 963.5594959259033,
        "wires": [
            [
                "c9190866.93be58"
            ]
        ]
    },
    {
        "id": "72df3eab.91578",
        "type": "change",
        "z": "9a2c567d.c9bc58",
        "name": "Extract filename",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "firmware.directory",
                "tot": "flow"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "req.files.firmware[0].originalname",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "req",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "res",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 626.815185546875,
        "y": 963.8094959259033,
        "wires": [
            [
                "e7e37fb.655cc8"
            ]
        ]
    },
    {
        "id": "bc5757c4.370a48",
        "type": "change",
        "z": "9a2c567d.c9bc58",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "bin$",
                "fromt": "re",
                "to": "md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1233.065185546875,
        "y": 963.1428089141846,
        "wires": [
            [
                "e5efaa43.17c6c8"
            ]
        ]
    },
    {
        "id": "201e5caa.58ba44",
        "type": "comment",
        "z": "9a2c567d.c9bc58",
        "name": "Firmware Upgrade",
        "info": "Modificado para funcionar tambi√©n desde ESP32\n\nThe system determines which firmware to send based\non the MAC address, version, and MD5 headers in the\nrequest from the ESP8266.\n\nFirstly, it checks if a firmware hash file with \nthe MAC address as the name exists, or else if a \nfirmware file with the version as the name exists.\nIf neither exist then no update is available.\n\nIt then reads the corresponding MD5 hash from the\nhash file and compares to the MD5 hash in the\nrequest.  If they match then the firmware is up\nto date and no update is required.\n\nOtherwise, it sends the contents of the firmware\nbin file and the MD5 hash value.",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "b938fd54.3b00c",
        "type": "comment",
        "z": "9a2c567d.c9bc58",
        "name": "Firmware Management web page",
        "info": "",
        "x": 155.49576568603516,
        "y": 685.1784801483154,
        "wires": []
    },
    {
        "id": "fa324c37.ad4ea",
        "type": "template",
        "z": "9a2c567d.c9bc58",
        "name": "Firmware Manager",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<html>\n    <head>\n        <title>ESP8266 OTA Firmware Manager</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <link rel=\"stylesheet\" href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\">\n        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\n        <script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\"></script>\n        <style>\n            .file-btn-grp {\n                display: none;\n            }\n            body {\n                background-color: #f6f6f6;\n            }\n            .text_holder {\n                display: block;\n                max-width: 100%;\n                word-wrap: break-word;\n                line-height: 30px;\n            }\n            #main {\n                margin-top: 50px;\n                background-color: #ffffff;\n                border-radius: 5px;\n                width: 70%;\n                min-width: 500px;\n                border: 1px solid #545454;\n            }\n            .alert {\n                margin-top: 10px;\n                margin-bottom: 5px;\n            }\n            .link {\n                font-style: italic;\n            }\n            .listentry {\n                display: none;\n                list-style-type: none;\n            }\n        </style>\n\n    </head>\n    <body>\n        <div class=\"container\" id=\"main\">\n            <h1><small>ESP8266 OTA Firmware Manager</small></h1>\n            <h2><small>Upload New Firmware</small></h2>\n\n            <form role =\"form\" id=\"main_input_box\" action=\"esp8266-ota\" method=\"POST\" enctype=\"multipart/form-data\" class=\"form-inline\">\n                <input type=\"file\" accept=\".bin\" class=\"hidden\" id=\"fileUpload\" name=\"firmware\" placeholder=\"firmware.bin\">\n                <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <span class=\"input-group-btn\">\n                        <button id=\"browse\" type=\"button\" class=\"btn btn-primary\">Browse...</button>\n                    </span>\n                    <input id=\"filename\" size=100 readonly=\"\" class=\"form-control\" placeholder=\"Firmware.bin\">\n                    <span class=\"input-group-btn\">\n                        <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary add_button\">\n                    </span>\n                </div>\n                </div>\n            </form>\n\n            <h2><small>Current Firmware</small></h2>\n            <ul class=\"list-group\" id=\"list_of_items\">\n            </ul>\n        </div>\n\n        <div id=\"linkModal\" class=\"modal fade\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n        \n                <!-- Modal content-->\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                        <h4 class=\"modal-title\">Create Symbolic Link</h4>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form class=\"form-horizontal\" id=\"linkForm\" role=\"form\" action=\"#\" method=\"POST\">\n                            <div class=\"form-group\">\n                                <label class=\"control-label  col-sm-2\" for=\"linkName\">Link:</label> \n                                <div class=\"col-sm-10\">\n                                    <input id=\"linkName\" name=\"linkName\" class=\"form-control\"/>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"control-label  col-sm-2\" for=\"linkFile\">To:</label> \n                                <div class=\"col-sm-10\">\n                                    <input class=\"form-control\" id=\"linkFile\" name=\"linkFile\"/>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"submit\" class=\"btn btn-success link-create\">Create</button>\n                        <button type=\"button\" class=\"btn btn-warning\" data-dismiss=\"modal\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <script>\n\n            var deleteButton = \"<button id='delete' class='btn btn-warning'>Delete</button>\";\n            var linkButton = \"<button id='link' class='btn btn-success'>Link</button>\";\n            var oneButton = \"<div class='file-btn-grp btn-group pull-right'>\" + deleteButton + \"</div>\";\n            var twoButtons = \"<div class='file-btn-grp btn-group pull-right'>\" + deleteButton + linkButton + \"</div>\";\n            \n            function addListEntry(list, filename, linkname) {\n            \n                var entry;\n                \n                if (linkname === undefined) {\n                    entry = $(\"<li class='listentry list-group-item'><div class='text_holder'><span>\" \n                    + filename + \"</span>\" + twoButtons + \"</div></li>\");\n                } else {\n                    entry = $(\"<li class='listentry list-group-item'><div class='text_holder'><span class='link'>\" \n                    + filename + \"</span> <span class='glyphicon glyphicon-arrow-right'></span> \" \n                    + linkname + oneButton + \"</div></li>\");\n                }\n                \n                entry.mouseover(function(){\n                    $(this).find(\".btn-group\").fadeIn(\"fast\");\n                });\n                entry.mouseleave(function(){\n                    $(this).find(\".btn-group\").fadeOut(\"slow\");\n                });\n                \n                entry.on(\"click\", \"button#delete\", function(){\n                    var listItem = this.parentElement.parentElement.parentElement;\n                    var file = this.parentElement.parentElement.childNodes[0].childNodes[0].data;\n                    $.ajax({\n                        type: 'DELETE',\n                        data: {\"filename\": file},\n                        success: function(result) {\n                            $(listItem).fadeOut(\"slow\", function(){\n                                listItem.remove();\n                            });\n                        },\n                        error: function(result) {\n                            $(listItem).append(\"<div class='alert alert-danger'>\"\n                                + \"<a href='#' class='close' data-dismiss='alert'\"\n                                + \"aria-label='close'>&times;</a>\"\n                                + result.responseText + \"</div>\");\n                        }\n                    });\n                });\n           \n                entry.on(\"click\", \"button#link\", function(){\n                    var file = this.parentElement.parentElement.childNodes[0].childNodes[0].data;\n                    $(\"#linkName\").val(\"\");\n                    $(\"#linkFile\").prop(\"disabled\", true).val(file);\n                    $(\"#linkName\").parent().removeClass(\"has-error\");\n                    $(\"#linkModal\").modal();\n                    $('#linkModal').on('shown.bs.modal', function () {\n                        $('#linkName').focus();\n                    });\n                });\n                \n                if (list.children().length == 0) {\n                    list.append(entry);\n                    entry.fadeIn(\"slow\");\n                    return;\n                }\n\n                if (filename < $(\"li:first span:first\", list).text()) {\n                    $(\"li:first\", list).before(entry);\n                    entry.fadeIn(\"slow\");\n                    return;\n                }\n                if (filename > $(\"li:last span:first\", list).text()) {\n                    $(\"li:last\", list).after(entry);\n                    entry.fadeIn(\"slow\");\n                    return;\n                }\n                \n                var count = 0;\n                var $li = $(\"li\", list);\n                do {\n                    var index = parseInt($li.length / 2);\n                    var $compare = $li.eq(index);\n                    var compare = $(\"span:first\",$compare).text();\n                    if (filename === compare) {\n                        break;\n                    }\n                    else if (filename > compare) {\n                        $li = $li.slice(index, $li.length);\n                    } else {\n                        $li = $li.slice(0, index);\n                    }\n                } while ($li.length > 1);\n\n                if (filename === compare) {\n                    $compare.slideUp(\"fast\").slideDown(\"slow\");\n                    return;\n                } else if (filename < compare) { \n                    entry.insertBefore($compare); \n                } else { \n                    entry.insertAfter($compare); \n                }\n                entry.slideDown(\"slow\");\n            }\n            \n            \n            var files = String(\"{{payload.files}}\").split(',');\n            var links = String(\"{{payload.links}}\").split(',');\n            \n            var list_of_items = $(\"#list_of_items\");\n            \n            files.forEach(function(file,index) {\n                if (links[index] == \"\") {\n                    addListEntry(this, file.slice(0,-4));\n                } else {\n                    addListEntry(this, file.slice(0,-4), links[index].slice(0,-4));\n                }\n            },list_of_items);\n           \n           \n            $(\"#linkModal\").on(\"click\", \"button.link-create\", function(event){\n               event.preventDefault();\n               if ($(\"#linkName\").val() == \"\") {\n                    $('#linkName').focus();\n                    $('#linkName').parent().addClass(\"has-error\");\n                    return false;\n               }\n               $(\"#linkFile\").prop(\"disabled\",false);               \n               $.ajax({\n                    type: 'PUT',\n                    data: $(\"#linkForm\").serialize(),\n                    success: function(result) {\n                        $(\"#linkModal\").modal('hide');\n                        addListEntry(list_of_items, $('#linkName').val(), $('#linkFile').val());\n                    },\n                    error: function(result) {\n                        $(\"#linkFile\").prop(\"disabled\", true);\n                        $('#linkName').focus();\n                        $('#linkName').parent().addClass(\"has-error\");\n                        $(linkForm).append(\"<div id='linkError' class='alert alert-danger'>\"\n                             + \"<a href='#' class='close' data-dismiss='alert'\"\n                             + \"aria-label='close'>&times;</a>\"\n                             + result.responseText + \"</div>\");\n                    }\n                });\n            });\n            \n            $(\"#browse\").on('click', function () {\n                fileUpload.click();\n            });\n            \n            $(\"#fileUpload\").on('change', function () {\n                $(\"#filename\").val($(\"#fileUpload\").val().split('/').pop().split('\\\\').pop());\n            });\n            \n            var frm = $(\"#main_input_box\");\n            \n            frm.submit( function( e ) {\n                e.preventDefault();\n                if ($('#fileUpload').val() == \"\") return null;\n                $.ajax( {\n                    url: frm.attr('action'),\n                    type: frm.attr('method'),\n                    data: new FormData( this ),\n                    processData: false,\n                    contentType: false,\n                    success: function(result) {\n                        addListEntry(list_of_items, $('#fileUpload').val().slice(0,-4).split('\\\\').pop());\n                        $('#fileUpload').val('');\n                        $(':text').val('');\n                    },\n                    error: function(result) {\n                        $(\"#main_input_box\").append(\"<div class='alert alert-danger'>\"\n                             + \"<a href='#' class='close' data-dismiss='alert'\"\n                             + \"aria-label='close'>&times;</a>\"\n                             + result.responseText + \"</div>\");\n                    }\n\n                });\n            });\n        </script>\n    </body>\n</html>",
        "output": "str",
        "x": 1388.7735595703125,
        "y": 762.7063465118408,
        "wires": [
            [
                "59b175c6.ffb24c"
            ]
        ]
    },
    {
        "id": "7a811173.c43d7",
        "type": "http in",
        "z": "9a2c567d.c9bc58",
        "name": "OTA Delete",
        "url": "/esp8266-ota",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 90.565185546875,
        "y": 1050.6428089141846,
        "wires": [
            [
                "f0cda1c9.0bf1a"
            ]
        ]
    },
    {
        "id": "dd1a2d9.e77aed",
        "type": "catch",
        "z": "9a2c567d.c9bc58",
        "name": "File Error",
        "scope": [
            "6207dc25.8aa654",
            "1ba75f98.24816",
            "4e19de83.e138",
            "bfd327b9.3de7b8",
            "2d0ef949.779706"
        ],
        "x": 1878.1067428588867,
        "y": 922.2261247634888,
        "wires": [
            [
                "67a7dc2f.518594"
            ]
        ]
    },
    {
        "id": "67a7dc2f.518594",
        "type": "change",
        "z": "9a2c567d.c9bc58",
        "name": "Error",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "500",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2166.440185546875,
        "y": 907.8928089141846,
        "wires": [
            [
                "59b175c6.ffb24c"
            ]
        ]
    },
    {
        "id": "b80436a5.5baa88",
        "type": "change",
        "z": "9a2c567d.c9bc58",
        "name": "Change to MD5 filename",
        "rules": [
            {
                "t": "change",
                "p": "payload.filename",
                "pt": "msg",
                "from": "bin",
                "fromt": "str",
                "to": "md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1886.6068420410156,
        "y": 1053.5594358444214,
        "wires": [
            [
                "1ba75f98.24816"
            ]
        ]
    },
    {
        "id": "3abafd11.36eea2",
        "type": "http in",
        "z": "9a2c567d.c9bc58",
        "name": "OTA Link",
        "url": "/esp8266-ota",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 91.440185546875,
        "y": 1158.3928089141846,
        "wires": [
            [
                "4c043353.d88a2c"
            ]
        ]
    },
    {
        "id": "4c043353.d88a2c",
        "type": "change",
        "z": "9a2c567d.c9bc58",
        "name": "Extract filename",
        "rules": [
            {
                "t": "change",
                "p": "payload.linkName",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".bin",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.linkFile",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".bin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1392.440185546875,
        "y": 1160.8928089141846,
        "wires": [
            [
                "4e19de83.e138"
            ]
        ]
    },
    {
        "id": "e72c4816.4a4988",
        "type": "change",
        "z": "9a2c567d.c9bc58",
        "name": "Change to MD5 Filename",
        "rules": [
            {
                "t": "change",
                "p": "payload.linkName",
                "pt": "msg",
                "from": "bin$",
                "fromt": "re",
                "to": "md5",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.linkFile",
                "pt": "msg",
                "from": "bin$",
                "fromt": "re",
                "to": "md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1915.440185546875,
        "y": 1161.8928089141846,
        "wires": [
            [
                "bfd327b9.3de7b8"
            ]
        ]
    },
    {
        "id": "f0cda1c9.0bf1a",
        "type": "change",
        "z": "9a2c567d.c9bc58",
        "name": "Extract filename",
        "rules": [
            {
                "t": "change",
                "p": "payload.filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".bin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1389.940185546875,
        "y": 1054.3928089141846,
        "wires": [
            [
                "6207dc25.8aa654"
            ]
        ]
    },
    {
        "id": "5065ff85.4b455",
        "type": "http response",
        "z": "9a2c567d.c9bc58",
        "name": "OTA Response",
        "x": 3210.059814453125,
        "y": 366.06256103515625,
        "wires": []
    },
    {
        "id": "30cc65a7.c9413a",
        "type": "file in",
        "z": "9a2c567d.c9bc58",
        "name": "Load Firmware",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "sendError": false,
        "allProps": false,
        "x": 2680,
        "y": 400,
        "wires": [
            [
                "5065ff85.4b455",
                "83dcae00.efc07"
            ]
        ]
    },
    {
        "id": "bcc38d43.d6a6d",
        "type": "change",
        "z": "9a2c567d.c9bc58",
        "name": "No Update",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "304",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2956.107421875,
        "y": 258.52682304382324,
        "wires": [
            [
                "5065ff85.4b455"
            ]
        ]
    },
    {
        "id": "441b3198.1ba9b",
        "type": "change",
        "z": "9a2c567d.c9bc58",
        "name": "Forbidden",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "403",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Forbidden",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2930,
        "y": 120,
        "wires": [
            [
                "5065ff85.4b455"
            ]
        ]
    },
    {
        "id": "83dcae00.efc07",
        "type": "debug",
        "z": "9a2c567d.c9bc58",
        "name": "Update sent",
        "active": true,
        "console": "false",
        "complete": "req.headers.x-esp8266-sta-mac",
        "x": 2930,
        "y": 420,
        "wires": []
    },
    {
        "id": "ffae2a7c.345a38",
        "type": "change",
        "z": "9a2c567d.c9bc58",
        "name": "Save MD5 Hash",
        "rules": [
            {
                "t": "set",
                "p": "headers.x-MD5",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "md5",
                "fromt": "str",
                "to": "bin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2480,
        "y": 440,
        "wires": [
            [
                "30cc65a7.c9413a"
            ]
        ]
    },
    {
        "id": "7c5e29fb.0c9e38",
        "type": "switch",
        "z": "9a2c567d.c9bc58",
        "name": "Update type",
        "property": "req.headers.x-esp8266-mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "spiffs",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sketch",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 180,
        "wires": [
            [
                "bcc38d43.d6a6d"
            ],
            [
                "2c6c7c1f.1859a4"
            ]
        ]
    },
    {
        "id": "83889006.7d8a3",
        "type": "switch",
        "z": "9a2c567d.c9bc58",
        "name": "Compare MD5 hash",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "req.headers.x-esp8266-sketch-md5",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 2140,
        "y": 300,
        "wires": [
            [
                "bcc38d43.d6a6d",
                "aa40f0d6.18501"
            ],
            [
                "ffae2a7c.345a38",
                "356049da.b71496"
            ]
        ]
    },
    {
        "id": "e1d02c45.1ad83",
        "type": "catch",
        "z": "9a2c567d.c9bc58",
        "name": "File error",
        "scope": [
            "30cc65a7.c9413a",
            "2fa044cb.9d727c"
        ],
        "x": 2720,
        "y": 340,
        "wires": [
            [
                "bcc38d43.d6a6d",
                "8bf70d0a.ea88"
            ]
        ]
    },
    {
        "id": "1cc7ae82.4814d1",
        "type": "switch",
        "z": "9a2c567d.c9bc58",
        "name": "Check user agent",
        "property": "req.headers.user-agent",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ESP8266-http-Update",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ESP32-http-Update",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 311.21436309814453,
        "y": 134.95541191101074,
        "wires": [
            [
                "7c5e29fb.0c9e38"
            ],
            [
                "6f386a3776dbe221"
            ],
            [
                "441b3198.1ba9b"
            ]
        ]
    },
    {
        "id": "2c6c7c1f.1859a4",
        "type": "change",
        "z": "9a2c567d.c9bc58",
        "name": "Get MAC hash filename",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "firmware.directory",
                "tot": "flow"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "req.headers.x-esp8266-sta-mac",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 280,
        "wires": [
            [
                "1ab2632f.8b6cfd"
            ]
        ]
    },
    {
        "id": "2fa044cb.9d727c",
        "type": "file in",
        "z": "9a2c567d.c9bc58",
        "name": "Load Hash",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "sendError": false,
        "allProps": false,
        "x": 1734.410629272461,
        "y": 341.7768840789795,
        "wires": [
            [
                "55eea548c15bb8bf"
            ]
        ]
    },
    {
        "id": "3e452e93.f8c502",
        "type": "change",
        "z": "9a2c567d.c9bc58",
        "name": "Get Version hash filename",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "firmware.directory",
                "tot": "flow"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "req.headers.x-esp8266-version",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 440,
        "wires": [
            [
                "97d98a42.adaa58",
                "bb982f89.a1316"
            ]
        ]
    },
    {
        "id": "8bf70d0a.ea88",
        "type": "debug",
        "z": "9a2c567d.c9bc58",
        "name": "Firmware file error",
        "active": false,
        "console": "false",
        "complete": "error",
        "x": 2930,
        "y": 340,
        "wires": []
    },
    {
        "id": "d0080f07.24e4d",
        "type": "http in",
        "z": "9a2c567d.c9bc58",
        "name": "OTA Request",
        "url": "/esp8266-ota/update",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 75,
        "y": 134.95541191101074,
        "wires": [
            [
                "1cc7ae82.4814d1",
                "fec83a29.cbb558",
                "9a9dfefb0e6f113f",
                "ad9c1616c4ec8509"
            ]
        ]
    },
    {
        "id": "a3bf5c34.aa108",
        "type": "switch",
        "z": "9a2c567d.c9bc58",
        "name": "ver",
        "property": "req.headers.x-esp8266-version",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 400,
        "wires": [
            [
                "3e452e93.f8c502"
            ],
            [
                "3cae9c88.db30a4"
            ]
        ]
    },
    {
        "id": "3cae9c88.db30a4",
        "type": "change",
        "z": "9a2c567d.c9bc58",
        "name": "Version in Request",
        "rules": [
            {
                "t": "set",
                "p": "req.headers.x-esp8266-version",
                "pt": "msg",
                "to": "req.params.version",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 500,
        "wires": [
            [
                "3e452e93.f8c502"
            ]
        ]
    },
    {
        "id": "fec83a29.cbb558",
        "type": "debug",
        "z": "9a2c567d.c9bc58",
        "name": "Update req",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 270,
        "y": 220,
        "wires": []
    },
    {
        "id": "50e66cdf.532e44",
        "type": "debug",
        "z": "9a2c567d.c9bc58",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1291.773494720459,
        "y": 382.1797161102295,
        "wires": []
    },
    {
        "id": "4da6dc07.a7a994",
        "type": "debug",
        "z": "9a2c567d.c9bc58",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1315.0234375,
        "y": 294.0390625,
        "wires": []
    },
    {
        "id": "bb982f89.a1316",
        "type": "debug",
        "z": "9a2c567d.c9bc58",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "filename",
        "x": 1440,
        "y": 580,
        "wires": []
    },
    {
        "id": "2642b78e.e21848",
        "type": "debug",
        "z": "9a2c567d.c9bc58",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "filename",
        "x": 1770.0234375,
        "y": 524.0390625,
        "wires": []
    },
    {
        "id": "669e61f3.97669",
        "type": "debug",
        "z": "9a2c567d.c9bc58",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "filename",
        "x": 1789.0234375,
        "y": 407.0390625,
        "wires": []
    },
    {
        "id": "aa40f0d6.18501",
        "type": "debug",
        "z": "9a2c567d.c9bc58",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "filename",
        "x": 2380,
        "y": 180,
        "wires": []
    },
    {
        "id": "356049da.b71496",
        "type": "debug",
        "z": "9a2c567d.c9bc58",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "filename",
        "x": 2380,
        "y": 540,
        "wires": []
    },
    {
        "id": "26622367a57fa13a",
        "type": "inject",
        "z": "9a2c567d.c9bc58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "FOLDER?",
        "payloadType": "str",
        "x": 110,
        "y": 420,
        "wires": [
            [
                "87dd7c24afbc64e4"
            ]
        ]
    },
    {
        "id": "d17729a983f75a42",
        "type": "catch",
        "z": "9a2c567d.c9bc58",
        "name": "",
        "scope": [
            "87dd7c24afbc64e4"
        ],
        "uncaught": false,
        "x": 130,
        "y": 460,
        "wires": [
            [
                "8ebd141d6c5c1c50"
            ]
        ]
    },
    {
        "id": "80c88d8e030f4ab9",
        "type": "delay",
        "z": "9a2c567d.c9bc58",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 453.440185546875,
        "y": 963.8928089141846,
        "wires": [
            [
                "72df3eab.91578"
            ]
        ]
    },
    {
        "id": "f0729e15.c31c3",
        "type": "httpInMultipart",
        "z": "9a2c567d.c9bc58",
        "name": "OTA Upload",
        "url": "/esp8266-ota",
        "method": "post",
        "fields": "[{ \"name\": \"firmware\"}]",
        "swaggerDoc": "",
        "x": 97.440185546875,
        "y": 916.8928089141846,
        "wires": [
            [
                "2d0ef949.779706"
            ]
        ]
    },
    {
        "id": "c2cbaac2.b38c58",
        "type": "config",
        "z": "9a2c567d.c9bc58",
        "name": "Firmware Config",
        "properties": [
            {
                "p": "firmware.directory",
                "pt": "flow",
                "to": "/data/OTA/",
                "tot": "str"
            }
        ],
        "active": true,
        "x": 123.0714111328125,
        "y": 360.1428527832031,
        "wires": []
    },
    {
        "id": "2d0ef949.779706",
        "type": "fs-ops-move",
        "z": "9a2c567d.c9bc58",
        "name": "Store firmware",
        "sourcePath": "req.files.firmware[0].destination",
        "sourcePathType": "msg",
        "sourceFilename": "req.files.firmware[0].filename",
        "sourceFilenameType": "msg",
        "destPath": "firmware.directory",
        "destPathType": "flow",
        "destFilename": "req.files.firmware[0].originalname",
        "destFilenameType": "msg",
        "link": false,
        "x": 287.440185546875,
        "y": 916.8928089141846,
        "wires": [
            [
                "59b175c6.ffb24c",
                "80c88d8e030f4ab9"
            ]
        ]
    },
    {
        "id": "4e19de83.e138",
        "type": "fs-ops-move",
        "z": "9a2c567d.c9bc58",
        "name": "Link firmware",
        "sourcePath": "",
        "sourcePathType": "str",
        "sourceFilename": "payload.linkFile",
        "sourceFilenameType": "msg",
        "destPath": "firmware.directory",
        "destPathType": "flow",
        "destFilename": "payload.linkName",
        "destFilenameType": "msg",
        "link": true,
        "x": 1651.940185546875,
        "y": 1160.8928089141846,
        "wires": [
            [
                "e72c4816.4a4988"
            ]
        ]
    },
    {
        "id": "bfd327b9.3de7b8",
        "type": "fs-ops-move",
        "z": "9a2c567d.c9bc58",
        "name": "Link MD5",
        "sourcePath": "",
        "sourcePathType": "str",
        "sourceFilename": "payload.linkFile",
        "sourceFilenameType": "msg",
        "destPath": "firmware.directory",
        "destPathType": "flow",
        "destFilename": "payload.linkName",
        "destFilenameType": "msg",
        "link": true,
        "x": 2159.940185546875,
        "y": 1160.8928089141846,
        "wires": [
            [
                "59b175c6.ffb24c"
            ]
        ]
    },
    {
        "id": "6207dc25.8aa654",
        "type": "fs-ops-delete",
        "z": "9a2c567d.c9bc58",
        "name": "Delete firmware",
        "path": "firmware.directory",
        "pathType": "flow",
        "filename": "payload.filename",
        "filenameType": "msg",
        "x": 1636.0652313232422,
        "y": 1053.476086616516,
        "wires": [
            [
                "b80436a5.5baa88"
            ]
        ]
    },
    {
        "id": "1ba75f98.24816",
        "type": "fs-ops-delete",
        "z": "9a2c567d.c9bc58",
        "name": "Delete MD5 Hash",
        "path": "firmware.directory",
        "pathType": "flow",
        "filename": "payload.filename",
        "filenameType": "msg",
        "x": 2178.273391723633,
        "y": 1053.5593967437744,
        "wires": [
            [
                "59b175c6.ffb24c"
            ]
        ]
    },
    {
        "id": "97d98a42.adaa58",
        "type": "fs-ops-access",
        "z": "9a2c567d.c9bc58",
        "name": "Check for MD5 file exists",
        "path": "",
        "pathType": "str",
        "filename": "filename",
        "filenameType": "msg",
        "read": true,
        "write": false,
        "throwerror": false,
        "x": 1497.2857055664062,
        "y": 459.6696147918701,
        "wires": [
            [
                "2fa044cb.9d727c",
                "669e61f3.97669"
            ],
            [
                "2642b78e.e21848",
                "bcc38d43.d6a6d"
            ]
        ]
    },
    {
        "id": "1ab2632f.8b6cfd",
        "type": "fs-ops-access",
        "z": "9a2c567d.c9bc58",
        "name": "Check for MD5 file exists",
        "path": "",
        "pathType": "str",
        "filename": "filename",
        "filenameType": "msg",
        "read": true,
        "write": false,
        "throwerror": false,
        "x": 1009.357177734375,
        "y": 349.09826469421387,
        "wires": [
            [
                "2fa044cb.9d727c",
                "4da6dc07.a7a994"
            ],
            [
                "50e66cdf.532e44",
                "66df75bcf26988af"
            ]
        ]
    },
    {
        "id": "87dd7c24afbc64e4",
        "type": "fs-ops-stats",
        "z": "9a2c567d.c9bc58",
        "name": "Check FOLDER",
        "path": "",
        "pathType": "str",
        "filename": "firmware.directory",
        "filenameType": "flow",
        "stats": "stats",
        "sizeType": "msg",
        "x": 300,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "3b4b06ed.61028a",
        "type": "fs-ops-link",
        "z": "9a2c567d.c9bc58",
        "name": "Get Links",
        "path": "firmware.directory",
        "pathType": "flow",
        "filename": "payload.files",
        "filenameType": "msg",
        "link": "payload.links",
        "linkType": "msg",
        "x": 783.9401779174805,
        "y": 765.2261199951172,
        "wires": [
            [
                "fa324c37.ad4ea"
            ]
        ]
    },
    {
        "id": "55397768.5b71a8",
        "type": "fs-ops-dir",
        "z": "9a2c567d.c9bc58",
        "name": "Firmware listing",
        "path": "firmware.directory",
        "pathType": "flow",
        "filter": "*.bin",
        "filterType": "str",
        "dir": "payload.files",
        "dirType": "msg",
        "x": 500.4757843017578,
        "y": 764.6944017410278,
        "wires": [
            [
                "3b4b06ed.61028a"
            ]
        ]
    },
    {
        "id": "8ebd141d6c5c1c50",
        "type": "fs-ops-mkdir",
        "z": "9a2c567d.c9bc58",
        "name": "",
        "path": "",
        "pathType": "str",
        "dirname": "firmware.directory",
        "dirnameType": "flow",
        "recursive": false,
        "mode": "777",
        "fullpath": "directory",
        "fullpathType": "msg",
        "x": 300,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "c9190866.93be58",
        "type": "md5",
        "z": "9a2c567d.c9bc58",
        "name": "",
        "fieldToHash": "payload",
        "hashField": "payload",
        "hashFieldType": "msg",
        "x": 1039.1069946289062,
        "y": 963.5594348907471,
        "wires": [
            [
                "bc5757c4.370a48"
            ]
        ]
    },
    {
        "id": "b2aca879e9d4c68c",
        "type": "httpInMultipart",
        "z": "9a2c567d.c9bc58",
        "name": "OTA Upload",
        "url": "/esp8266-ota/esp8266-ota",
        "method": "post",
        "fields": "[{ \"name\": \"firmware\"}]",
        "swaggerDoc": "",
        "x": 97.440185546875,
        "y": 976.8928089141846,
        "wires": [
            [
                "2d0ef949.779706"
            ]
        ]
    },
    {
        "id": "9a9dfefb0e6f113f",
        "type": "debug",
        "z": "9a2c567d.c9bc58",
        "name": "msg.req.headers.x-esp8266-sta-mac",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "req.headers.x-esp8266-sta-mac",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 80,
        "wires": []
    },
    {
        "id": "6f386a3776dbe221",
        "type": "switch",
        "z": "9a2c567d.c9bc58",
        "name": "Update type ESP32",
        "property": "req.headers.x-esp32-mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "spiffs",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sketch",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "bcc38d43.d6a6d"
            ],
            [
                "48a2c3fdac0832b1"
            ]
        ]
    },
    {
        "id": "48a2c3fdac0832b1",
        "type": "change",
        "z": "9a2c567d.c9bc58",
        "name": "Get MAC hash filename ESP32",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "firmware.directory",
                "tot": "flow"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "req.headers.x-esp32-sta-mac",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 320,
        "wires": [
            [
                "1ab2632f.8b6cfd"
            ]
        ]
    },
    {
        "id": "66df75bcf26988af",
        "type": "switch",
        "z": "9a2c567d.c9bc58",
        "name": "Check user agent",
        "property": "req.headers.user-agent",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ESP8266-http-Update",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ESP32-http-Update",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 400,
        "wires": [
            [
                "a3bf5c34.aa108"
            ],
            [
                "ca5e892d33a94b54"
            ]
        ]
    },
    {
        "id": "ca5e892d33a94b54",
        "type": "switch",
        "z": "9a2c567d.c9bc58",
        "name": " ESP32 ver",
        "property": "req.headers.x-esp32-version",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 580,
        "wires": [
            [
                "125c7378a9c7d1e9"
            ],
            [
                "14a476265414504b"
            ]
        ]
    },
    {
        "id": "14a476265414504b",
        "type": "change",
        "z": "9a2c567d.c9bc58",
        "name": "Version in Request ESP32",
        "rules": [
            {
                "t": "set",
                "p": "req.headers.x-esp32-version",
                "pt": "msg",
                "to": "req.params.version",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 640,
        "wires": [
            [
                "125c7378a9c7d1e9"
            ]
        ]
    },
    {
        "id": "125c7378a9c7d1e9",
        "type": "change",
        "z": "9a2c567d.c9bc58",
        "name": "Get Version hash filename ESP32",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "firmware.directory",
                "tot": "flow"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "req.headers.x-esp32-version",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 580,
        "wires": [
            [
                "97d98a42.adaa58"
            ]
        ]
    },
    {
        "id": "55eea548c15bb8bf",
        "type": "switch",
        "z": "9a2c567d.c9bc58",
        "name": "Check user agent",
        "property": "req.headers.user-agent",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ESP8266-http-Update",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ESP32-http-Update",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1930,
        "y": 340,
        "wires": [
            [
                "83889006.7d8a3"
            ],
            [
                "7becbcf256ac239b"
            ]
        ]
    },
    {
        "id": "7becbcf256ac239b",
        "type": "switch",
        "z": "9a2c567d.c9bc58",
        "name": "Compare MD5 hash ESP32",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "req.headers.x-esp32-sketch-md5",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 2160,
        "y": 440,
        "wires": [
            [
                "bcc38d43.d6a6d"
            ],
            [
                "ffae2a7c.345a38"
            ]
        ]
    },
    {
        "id": "ad9c1616c4ec8509",
        "type": "debug",
        "z": "9a2c567d.c9bc58",
        "name": "msg.req.headers.user-agent",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "req.headers.user-agent",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 40,
        "wires": []
    },
    {
        "id": "f7888fa264c1ae31",
        "type": "comment",
        "z": "9a2c567d.c9bc58",
        "name": "API REST for Firmware Management",
        "info": "",
        "x": 160,
        "y": 860,
        "wires": []
    },
    {
        "id": "0c8e1030daea618d",
        "type": "comment",
        "z": "9a2c567d.c9bc58",
        "name": "Configuracion folder Firmwares",
        "info": "En el caso de los contenedores configurar el directorio a\n/data/OTA/\n\nSi usamos la m√°quina virtual usar:\n/home/ubuntu/OTA\n\nLa cuesti√≥n es usar un directorio donde tengamos permisos\nEl directorio se crear√° si no existe",
        "x": 150,
        "y": 320,
        "wires": []
    }
]