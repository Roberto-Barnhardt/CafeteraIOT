[
    {
        "id": "49b807f2f917cbb4",
        "type": "tab",
        "label": "CafeteraIOT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "dfa216ac312c3f76",
        "type": "group",
        "z": "49b807f2f917cbb4",
        "name": "",
        "style": {
            "fill": "#7fb7df",
            "fill-opacity": "0.37",
            "label": true
        },
        "nodes": [
            "8239efbbe4b93434",
            "95ea734503c69ad8",
            "f1993f292a4a5e67",
            "d1ab89945c52862b",
            "5dd6db6de41be6c3",
            "aaa8fd5e84bb1d6b",
            "1739036bc4b6c8ec",
            "57907104c92434a0",
            "f4697f2f73f95a25",
            "1492375f4ed84885",
            "62bb51577c51bf9c"
        ],
        "x": 34,
        "y": 1119,
        "w": 612,
        "h": 382
    },
    {
        "id": "44bc797fdaab9651",
        "type": "group",
        "z": "49b807f2f917cbb4",
        "name": "",
        "style": {
            "fill": "#dbcbe7",
            "fill-opacity": "0.43",
            "label": true
        },
        "nodes": [
            "a57e46e7077afcee",
            "dcce1166571ace02",
            "f67fc59f42306f02",
            "95ec36055c9f8757",
            "c050b5aae7a61a59",
            "1487379ea14003d8"
        ],
        "x": 914,
        "y": 19,
        "w": 632,
        "h": 282
    },
    {
        "id": "115b92cc3500e409",
        "type": "group",
        "z": "49b807f2f917cbb4",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "fill-opacity": "0.35",
            "label": true
        },
        "nodes": [
            "2fd0df25a27dc917",
            "2bdab53907926643",
            "4e780ba104d21f7d",
            "81394eff94c515b7",
            "780c07fc9dfffc2b",
            "487b1336b0bda16b",
            "e59913ec36b93ab3",
            "e9002475be387080",
            "a86c78ec0fdacd84",
            "889f5aaede6cf924"
        ],
        "x": 34,
        "y": 19,
        "w": 852,
        "h": 282
    },
    {
        "id": "89c61fe7b44f9f98",
        "type": "group",
        "z": "49b807f2f917cbb4",
        "name": "",
        "style": {
            "fill": "#ffdf7f",
            "fill-opacity": "0.38",
            "label": true
        },
        "nodes": [
            "ad8049bfd1c9b63b",
            "3521c6f2ad96549f",
            "62a4be0ed10eef2c",
            "eaca7a383a5dbe95",
            "10fe3d50164ded6a",
            "d4767d59d5368664",
            "a4833898bd4f61d3",
            "11c5c1d5a4bbe329",
            "0921177f9c773158",
            "5914922c8327652f",
            "f175acee830fded7",
            "40c6c245f620ae11",
            "2851df91cc48657b",
            "c4f0545308bd1fb9",
            "5704a9c812af2a37",
            "eabe070bc357996d",
            "7023586abefdd463",
            "cfcc16029c73f145",
            "20576d1cbf559970",
            "d581a8153b167cdd",
            "f969f575762c722e",
            "9f68b0de15cea53a",
            "488329f47357db7d",
            "70c58a796f8fd646",
            "a565c1c27032fa27",
            "4f4b698de11cafbd",
            "cd2a6cb8dc8cc7df",
            "8a36e24d2e2319f6",
            "2f97eabbab25f01f",
            "ca7714ab4c20a9c9",
            "ce3c85eb54442ebb"
        ],
        "x": 34,
        "y": 319,
        "w": 792,
        "h": 782
    },
    {
        "id": "57870a48aa3cd0e8",
        "type": "group",
        "z": "49b807f2f917cbb4",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "fill-opacity": "0.35",
            "label": true
        },
        "nodes": [
            "17f88330ef6c17fa",
            "0515fa029715f849",
            "e933ea5a25eca7c5",
            "b944f58b8e19c299",
            "83efc1aeff16b10d",
            "390daf266c704497"
        ],
        "x": 854,
        "y": 619,
        "w": 692,
        "h": 242
    },
    {
        "id": "d4afa3cb5023d788",
        "type": "group",
        "z": "49b807f2f917cbb4",
        "name": "",
        "style": {
            "fill": "#7fb7df",
            "fill-opacity": "0.37",
            "label": true
        },
        "nodes": [
            "63333fd3893d10f7",
            "3d2d952fc08e7577",
            "bd7e41d1909d3eb4",
            "3a8e2d473198228f",
            "75e0ad0cc6caef68",
            "fd6cd11afdf7487a",
            "eceb338d5df69a1f",
            "4b233460fa2e0cd5"
        ],
        "x": 854,
        "y": 319,
        "w": 692,
        "h": 282
    },
    {
        "id": "4f9f69e37aaca6f0",
        "type": "group",
        "z": "49b807f2f917cbb4",
        "name": "",
        "style": {
            "fill": "#ffff7f",
            "fill-opacity": "0.33",
            "label": true
        },
        "nodes": [
            "937f2449c0851e36",
            "bdb3e53b0a576aa7",
            "8b850633563da6a9",
            "38f1e2800522aa6f",
            "a1b685dfd6c33db0",
            "a37b54c738ef2bee",
            "fb82538a8cd4767e",
            "d4a2b31e3d478296",
            "3c5be6b4546e6232",
            "0dd60573115b84a2",
            "083e86da7f82b985",
            "698841a72516dc35",
            "4f1c288ac6b4b8fc",
            "dc2a55d584d4e01c",
            "32e0787c9d5db177",
            "cfc9572a76fede45",
            "c7d7b3ddc630e804"
        ],
        "x": 854,
        "y": 879,
        "w": 692,
        "h": 422
    },
    {
        "id": "8239efbbe4b93434",
        "type": "inject",
        "z": "49b807f2f917cbb4",
        "g": "dfa216ac312c3f76",
        "name": "alarm 10:00",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"status\" : \"on\", \"time\": \"23:49\"}",
        "payloadType": "json",
        "x": 150,
        "y": 1220,
        "wires": [
            [
                "f1993f292a4a5e67"
            ]
        ]
    },
    {
        "id": "95ea734503c69ad8",
        "type": "inject",
        "z": "49b807f2f917cbb4",
        "g": "dfa216ac312c3f76",
        "name": "alarm off",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"status\" : \"off\", \"time\": \"\"}",
        "payloadType": "json",
        "x": 140,
        "y": 1260,
        "wires": [
            [
                "f1993f292a4a5e67"
            ]
        ]
    },
    {
        "id": "f1993f292a4a5e67",
        "type": "mqtt out",
        "z": "49b807f2f917cbb4",
        "g": "dfa216ac312c3f76",
        "name": "",
        "topic": "cafeteraiot/alarm/status",
        "qos": "1",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "73d49c9cfad6f8d1",
        "x": 510,
        "y": 1240,
        "wires": []
    },
    {
        "id": "d1ab89945c52862b",
        "type": "mqtt out",
        "z": "49b807f2f917cbb4",
        "g": "dfa216ac312c3f76",
        "name": "",
        "topic": "cafeteraiot/coffee/status",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "73d49c9cfad6f8d1",
        "x": 510,
        "y": 1340,
        "wires": []
    },
    {
        "id": "5dd6db6de41be6c3",
        "type": "inject",
        "z": "49b807f2f917cbb4",
        "g": "dfa216ac312c3f76",
        "name": "coffee on",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"status\" : \"on\"}",
        "payloadType": "json",
        "x": 140,
        "y": 1320,
        "wires": [
            [
                "d1ab89945c52862b"
            ]
        ]
    },
    {
        "id": "aaa8fd5e84bb1d6b",
        "type": "inject",
        "z": "49b807f2f917cbb4",
        "g": "dfa216ac312c3f76",
        "name": "coffee off",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"status\" : \"off\"}",
        "payloadType": "json",
        "x": 140,
        "y": 1360,
        "wires": [
            [
                "d1ab89945c52862b"
            ]
        ]
    },
    {
        "id": "2fd0df25a27dc917",
        "type": "mongodb in",
        "z": "49b807f2f917cbb4",
        "g": "115b92cc3500e409",
        "mongodb": "7adc7b85c0b61e8a",
        "name": "",
        "collection": "alarm",
        "operation": "find",
        "x": 550,
        "y": 120,
        "wires": [
            [
                "e59913ec36b93ab3"
            ]
        ]
    },
    {
        "id": "2bdab53907926643",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "115b92cc3500e409",
        "name": "Ultimo mensaje",
        "func": "msg.payload = {};\nmsg.sort = { \"payload.date\": -1 };\nmsg.limit = 1;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 140,
        "wires": [
            [
                "2fd0df25a27dc917"
            ]
        ]
    },
    {
        "id": "4e780ba104d21f7d",
        "type": "inject",
        "z": "49b807f2f917cbb4",
        "g": "115b92cc3500e409",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "2bdab53907926643"
            ]
        ]
    },
    {
        "id": "81394eff94c515b7",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "115b92cc3500e409",
        "name": "Comparar con ahora",
        "func": "const alarm_time = msg.payload[0].payload.time;\nconst targetHour = parseInt(alarm_time.split(\":\")[0]);\nconst targetMinute = parseInt(alarm_time.split(\":\")[1]);\n// Get the current time\nconst currentTime = new Date();\nconst currentHour = currentTime.getHours();\nconst currentMinute = currentTime.getMinutes();\nif (targetHour === currentHour && targetMinute === currentMinute) {\n    // Set a global variable to true\n    global.set(\"timeMatched\", true);\n\n    // Start a counter here (if needed, depends on how you want to implement the counter)\n    // For example, you could use a setInterval function or a separate flow\n\n    msg.payload = { \"match\": true };\n} else {\n    msg.payload = { \"match\": false };\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 260,
        "wires": [
            [
                "780c07fc9dfffc2b"
            ]
        ]
    },
    {
        "id": "780c07fc9dfffc2b",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "115b92cc3500e409",
        "name": "If Match",
        "func": "if(msg.payload.match == true){\n    //Make sure everything is OK pot etc\n    msg.payload = {\"status\": \"on\"};\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 260,
        "wires": [
            [
                "487b1336b0bda16b",
                "889f5aaede6cf924"
            ]
        ]
    },
    {
        "id": "487b1336b0bda16b",
        "type": "mqtt out",
        "z": "49b807f2f917cbb4",
        "g": "115b92cc3500e409",
        "name": "",
        "topic": "cafeteraiot/coffee/status",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "73d49c9cfad6f8d1",
        "x": 750,
        "y": 260,
        "wires": []
    },
    {
        "id": "e59913ec36b93ab3",
        "type": "switch",
        "z": "49b807f2f917cbb4",
        "g": "115b92cc3500e409",
        "name": "",
        "property": "payload[0].payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 120,
        "wires": [
            [
                "81394eff94c515b7"
            ],
            []
        ]
    },
    {
        "id": "937f2449c0851e36",
        "type": "ui_gauge",
        "z": "49b807f2f917cbb4",
        "g": "4f9f69e37aaca6f0",
        "name": "",
        "group": "85d4fb6d3172e56e",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "wave",
        "title": "Water level",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1450,
        "y": 960,
        "wires": []
    },
    {
        "id": "488329f47357db7d",
        "type": "mqtt in",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "",
        "topic": "cafeteraiot/water_level",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "73d49c9cfad6f8d1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 940,
        "wires": [
            [
                "70c58a796f8fd646"
            ]
        ]
    },
    {
        "id": "bdb3e53b0a576aa7",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "4f9f69e37aaca6f0",
        "name": "function 7",
        "func": "msg.payload = msg.payload.level;\nmsg.colour = \"blue\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 960,
        "wires": [
            [
                "937f2449c0851e36"
            ]
        ]
    },
    {
        "id": "a565c1c27032fa27",
        "type": "mongodb out",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "mongodb": "7adc7b85c0b61e8a",
        "name": "",
        "collection": "water_level",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 630,
        "y": 940,
        "wires": []
    },
    {
        "id": "70c58a796f8fd646",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "+date",
        "func": "msg.payload[\"date\"] = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 940,
        "wires": [
            [
                "a565c1c27032fa27"
            ]
        ]
    },
    {
        "id": "a57e46e7077afcee",
        "type": "telegram receiver",
        "z": "49b807f2f917cbb4",
        "g": "44bc797fdaab9651",
        "name": "",
        "bot": "a2c03ae15197aa2c",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 1030,
        "y": 60,
        "wires": [
            [
                "dcce1166571ace02"
            ],
            []
        ]
    },
    {
        "id": "1739036bc4b6c8ec",
        "type": "comment",
        "z": "49b807f2f917cbb4",
        "g": "dfa216ac312c3f76",
        "name": "Testing",
        "info": "",
        "x": 270,
        "y": 1160,
        "wires": []
    },
    {
        "id": "e9002475be387080",
        "type": "comment",
        "z": "49b807f2f917cbb4",
        "g": "115b92cc3500e409",
        "name": "Check if it is alarm time every 60s",
        "info": "",
        "x": 470,
        "y": 60,
        "wires": []
    },
    {
        "id": "8b850633563da6a9",
        "type": "comment",
        "z": "49b807f2f917cbb4",
        "g": "4f9f69e37aaca6f0",
        "name": "Node-RED Dashboard",
        "info": "",
        "x": 1060,
        "y": 920,
        "wires": []
    },
    {
        "id": "dcce1166571ace02",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "44bc797fdaab9651",
        "name": "Sort commands",
        "func": "// @ts-nocheck\n//Local variables --------------------------\nvar cmd = msg.payload.content;\nvar making_coffee;\nvar pot_ok;\nvar enough_water;\nvar min_water_level = 20;\nvar message;\nvar alarm_msg;\nvar new_alarm_s;\nvar pub_msg;\nvar u_coffee_s, u_alarm_s = false;\n//Global variables --------------------------\nvar temp = global.get(\"coffee_temp\");\nvar water_level = global.get(\"water_level\");\nvar pot_s = global.get(\"pot_status\");\nvar coffee_s = global.get(\"coffee_status\");\nvar alarm_s = global.get(\"alarm_status\");\nvar alarm_t = global.get(\"alarm_time\");\n//Check enough water ------------------------\nif(water_level<min_water_level){\n    enough_water = false;\n} else {\n    enough_water = true;\n}\n//Check pot position -----------------------\nif(pot_s == \"ok\"){\n    pot_ok = true;\n} else if(pot_s == \"missing\"){\n    pot_ok = false;\n}\n//Check coffee status -----------------------\nif(coffee_s == \"on\"){\n    making_coffee = true;\n}else if(coffee_s = \"off\"){\n    making_coffee = false;\n}\n//Check alarm status ------------------------\nif(alarm_s == \"on\"){\n    // @ts-ignore\n    alarm_msg = \"set at \" + alarm_t + \"h\";\n}else if(alarm_s == \"off\"){\n    // @ts-ignore\n    alarm_msg = \"not set\";\n}\n//Check if asking for alarm time ------------\nvar set_alarm = global.get(\"tgram_set_time\");\nif(set_alarm == \"true\"){\n    //check if valid time--------------------\n    cmd = cmd.trim(); //Remove spaces\n    const parts = cmd.split(':');//Divide at the \":\"\n    if (parts.length !== 2) {\n        message = \"Invalid time format. Please use hh:mm.\";\n    }else{\n        const hours = parseInt(parts[0], 10);\n        const minutes = parseInt(parts[1], 10);\n        // Validate hours and minutes\n        if (isNaN(hours) || isNaN(minutes) || hours < 0 || hours > 23 || minutes < 0 || minutes > 59) {\n            message = \"Invalid time. Hours should be between 00 and 23, and minutes between 00 and 59.\";\n        }else{\n            alarm_t = cmd;\n            message = \"Alarm set at: \" + alarm_t;\n            global.set(\"tgram_set_time\", \"false\");\n            var pub_msg = {\"payload\": {\"status\": \"on\", \"time\": alarm_t}};\n            msg.payload.content = message;\n            return [msg, null, pub_msg];\n        }\n    }\n    msg.payload.content = message;\n    return [msg, null, null];\n//Rest of command logic -----------------------------\n}else{\n    switch(cmd){\n        case \"/start\":\n            if(!making_coffee && pot_ok && enough_water){\n                making_coffee = true;\n                //global.set(\"coffee_status\", \"on\");\n                coffee_s = \"on\";\n                u_coffee_s = true;\n                message = \"Started making coffee\";\n            } else if(making_coffee){\n                message = \"The coffee machine is already on!\";\n            } else if(!pot_ok){\n                message = \"The pot is missing!\";\n            } else if(!enough_water){\n                message = \"Not enough water!\";\n            }\n        break;\n        case \"/stop\":\n            if(!making_coffee){\n                message = \"The coffee machine is already off!\";\n            }else if(making_coffee){\n                u_coffee_s = true;\n                //global.set(\"coffee_status\", \"off\");\n                coffee_s = \"off\";\n                message = \"Stopped!\";\n            }\n        break;\n        case \"/status\":\n            // @ts-ignore\n            var message = \"Current status:\\nPower: \" + coffee_s\n            +\"\\nTemperature: \" + temp\n            + \" ºC\\nWater level: \" + water_level\n            + \" % \\nPot: \" + pot_s + \".\\nAlarm: \" + alarm_msg;\n        break;\n        case \"/set_alarm\":\n            new_alarm_s = \"on\";\n            message = \"Time to set? (hh:mm)\";\n            global.set(\"tgram_set_time\", \"true\");\n            u_alarm_s = true;\n        break;\n        case \"/disable_alarm\":\n            if(alarm_s == \"off\"){\n                message = \"Alarm already off\";\n            }else if (alarm_s == \"on\"){\n                new_alarm_s = \"off\";\n                message = \"Alarm turned off\";\n                u_alarm_s = true;\n            }    \n        break;\n        default:\n            message = \"unknown command!\";\n        break;\n    }\n    msg.payload.content = message;\n    if(!u_alarm_s && !u_coffee_s){\n        return [msg, null, null];\n    }else if(!u_alarm_s && u_coffee_s){\n        u_coffee_s = false;\n        //coffee_s = global.get(\"coffee_status\");\n        pub_msg = {\"payload\": {\"status\": coffee_s}};\n        return [msg, pub_msg, null];\n    }else if(u_alarm_s && !u_coffee_s){\n        u_alarm_s = false;\n        if(new_alarm_s == \"off\"){\n            pub_msg = {\"payload\": {\"status\": \"off\", \"time\": \"\" }};\n        }\n        return[msg, null, pub_msg];\n    }\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 140,
        "wires": [
            [
                "f67fc59f42306f02"
            ],
            [
                "c050b5aae7a61a59"
            ],
            [
                "1487379ea14003d8"
            ]
        ]
    },
    {
        "id": "f67fc59f42306f02",
        "type": "telegram sender",
        "z": "49b807f2f917cbb4",
        "g": "44bc797fdaab9651",
        "name": "",
        "bot": "a2c03ae15197aa2c",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1050,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "95ec36055c9f8757",
        "type": "comment",
        "z": "49b807f2f917cbb4",
        "g": "44bc797fdaab9651",
        "name": "Telegram",
        "info": "",
        "x": 1340,
        "y": 80,
        "wires": []
    },
    {
        "id": "a86c78ec0fdacd84",
        "type": "mqtt out",
        "z": "49b807f2f917cbb4",
        "g": "115b92cc3500e409",
        "name": "",
        "topic": "cafeteraiot/alarm/status",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "73d49c9cfad6f8d1",
        "x": 750,
        "y": 200,
        "wires": []
    },
    {
        "id": "889f5aaede6cf924",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "115b92cc3500e409",
        "name": "RST alarm",
        "func": "msg.payload = {\"status\": \"off\", \"time\": \"\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 200,
        "wires": [
            [
                "a86c78ec0fdacd84"
            ]
        ]
    },
    {
        "id": "c050b5aae7a61a59",
        "type": "mqtt out",
        "z": "49b807f2f917cbb4",
        "g": "44bc797fdaab9651",
        "name": "",
        "topic": "cafeteraiot/coffee/status",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "73d49c9cfad6f8d1",
        "x": 1410,
        "y": 200,
        "wires": []
    },
    {
        "id": "1487379ea14003d8",
        "type": "mqtt out",
        "z": "49b807f2f917cbb4",
        "g": "44bc797fdaab9651",
        "name": "",
        "topic": "cafeteraiot/alarm/status",
        "qos": "1",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "73d49c9cfad6f8d1",
        "x": 1410,
        "y": 260,
        "wires": []
    },
    {
        "id": "ad8049bfd1c9b63b",
        "type": "change",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "coffee_temp",
                "pt": "global",
                "to": "payload.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "3521c6f2ad96549f",
        "type": "comment",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "Data IN - Save in DB",
        "info": "",
        "x": 150,
        "y": 360,
        "wires": []
    },
    {
        "id": "62a4be0ed10eef2c",
        "type": "mqtt in",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "",
        "topic": "cafeteraiot/alarm/status",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "73d49c9cfad6f8d1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 400,
        "wires": [
            [
                "11c5c1d5a4bbe329",
                "cfcc16029c73f145",
                "9f68b0de15cea53a"
            ]
        ]
    },
    {
        "id": "eaca7a383a5dbe95",
        "type": "mqtt in",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "",
        "topic": "cafeteraiot/water_level",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "73d49c9cfad6f8d1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 540,
        "wires": [
            [
                "0921177f9c773158",
                "20576d1cbf559970"
            ]
        ]
    },
    {
        "id": "10fe3d50164ded6a",
        "type": "mqtt in",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "",
        "topic": "cafeteraiot/coffee/temp",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "73d49c9cfad6f8d1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 640,
        "wires": [
            [
                "ad8049bfd1c9b63b",
                "5914922c8327652f"
            ]
        ]
    },
    {
        "id": "d4767d59d5368664",
        "type": "mqtt in",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "",
        "topic": "cafeteraiot/pot",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "73d49c9cfad6f8d1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 840,
        "wires": [
            [
                "40c6c245f620ae11",
                "f969f575762c722e"
            ]
        ]
    },
    {
        "id": "a4833898bd4f61d3",
        "type": "mqtt in",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "",
        "topic": "cafeteraiot/coffee/status",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "73d49c9cfad6f8d1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 740,
        "wires": [
            [
                "f175acee830fded7",
                "d581a8153b167cdd"
            ]
        ]
    },
    {
        "id": "11c5c1d5a4bbe329",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "+date",
        "func": "msg.payload[\"date\"] = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 400,
        "wires": [
            [
                "2851df91cc48657b"
            ]
        ]
    },
    {
        "id": "0921177f9c773158",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "+date",
        "func": "msg.payload[\"date\"] = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 540,
        "wires": [
            [
                "c4f0545308bd1fb9"
            ]
        ]
    },
    {
        "id": "5914922c8327652f",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "+date",
        "func": "msg.payload[\"date\"] = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 640,
        "wires": [
            [
                "5704a9c812af2a37"
            ]
        ]
    },
    {
        "id": "f175acee830fded7",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "+date",
        "func": "msg.payload[\"date\"] = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 740,
        "wires": [
            [
                "eabe070bc357996d"
            ]
        ]
    },
    {
        "id": "40c6c245f620ae11",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "+date",
        "func": "msg.payload[\"date\"] = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 840,
        "wires": [
            [
                "7023586abefdd463"
            ]
        ]
    },
    {
        "id": "2851df91cc48657b",
        "type": "mongodb out",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "mongodb": "7adc7b85c0b61e8a",
        "name": "",
        "collection": "alarm",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 610,
        "y": 400,
        "wires": []
    },
    {
        "id": "c4f0545308bd1fb9",
        "type": "mongodb out",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "mongodb": "7adc7b85c0b61e8a",
        "name": "",
        "collection": "water_level",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 630,
        "y": 540,
        "wires": []
    },
    {
        "id": "5704a9c812af2a37",
        "type": "mongodb out",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "mongodb": "7adc7b85c0b61e8a",
        "name": "",
        "collection": "temp",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 610,
        "y": 640,
        "wires": []
    },
    {
        "id": "eabe070bc357996d",
        "type": "mongodb out",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "mongodb": "7adc7b85c0b61e8a",
        "name": "",
        "collection": "coffee_status",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 640,
        "y": 740,
        "wires": []
    },
    {
        "id": "7023586abefdd463",
        "type": "mongodb out",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "mongodb": "7adc7b85c0b61e8a",
        "name": "",
        "collection": "pot_status",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 630,
        "y": 840,
        "wires": []
    },
    {
        "id": "cfcc16029c73f145",
        "type": "change",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "alarm_status",
                "pt": "global",
                "to": "payload.status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "20576d1cbf559970",
        "type": "change",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "water_level",
                "pt": "global",
                "to": "payload.level",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "d581a8153b167cdd",
        "type": "change",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "coffee_status",
                "pt": "global",
                "to": "payload.status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "f969f575762c722e",
        "type": "change",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pot_status",
                "pt": "global",
                "to": "payload.status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "9f68b0de15cea53a",
        "type": "change",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "alarm_time",
                "pt": "global",
                "to": "payload.time",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "17f88330ef6c17fa",
        "type": "mongodb in",
        "z": "49b807f2f917cbb4",
        "g": "57870a48aa3cd0e8",
        "mongodb": "7adc7b85c0b61e8a",
        "name": "",
        "collection": "coffee_status",
        "operation": "find",
        "x": 1340,
        "y": 720,
        "wires": [
            [
                "b944f58b8e19c299"
            ]
        ]
    },
    {
        "id": "0515fa029715f849",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "57870a48aa3cd0e8",
        "name": "Check encendido y hora",
        "func": "//Check if coffee machine is currently on\nvar is_running = global.get(\"coffee_status\");\nif(is_running == \"on\"){\n    msg.payload = {\"payload.status\": \"on\"};\n    msg.sort = { \"payload.date\": -1 };\n    msg.limit = 1;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 720,
        "wires": [
            [
                "17f88330ef6c17fa"
            ]
        ]
    },
    {
        "id": "e933ea5a25eca7c5",
        "type": "inject",
        "z": "49b807f2f917cbb4",
        "g": "57870a48aa3cd0e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "20",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 970,
        "y": 660,
        "wires": [
            [
                "0515fa029715f849"
            ]
        ]
    },
    {
        "id": "b944f58b8e19c299",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "57870a48aa3cd0e8",
        "name": "Comparar con ahora",
        "func": "const startTime = msg.payload[0].payload.date;\n// Get the current time\nconst currentTime = new Date();\n//Calculate time difference\n// @ts-ignore\nconst timeDiff = (currentTime - startTime) / 60000;\n// Define the target time in minutes (e.g., 40 minutes)\nconst targetTime = 1; // You can change this value to adjust the timeout\n\n// Check if the target time has passed\nif (timeDiff >= targetTime) {    \n    msg.payload = {\"status\": \"off\"};\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 820,
        "wires": [
            [
                "390daf266c704497"
            ]
        ]
    },
    {
        "id": "83efc1aeff16b10d",
        "type": "comment",
        "z": "49b807f2f917cbb4",
        "g": "57870a48aa3cd0e8",
        "name": "Check time since turned on every 20s",
        "info": "",
        "x": 1310,
        "y": 660,
        "wires": []
    },
    {
        "id": "390daf266c704497",
        "type": "mqtt out",
        "z": "49b807f2f917cbb4",
        "g": "57870a48aa3cd0e8",
        "name": "",
        "topic": "cafeteraiot/coffee/status",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "73d49c9cfad6f8d1",
        "x": 1410,
        "y": 820,
        "wires": []
    },
    {
        "id": "38f1e2800522aa6f",
        "type": "mqtt in",
        "z": "49b807f2f917cbb4",
        "g": "4f9f69e37aaca6f0",
        "name": "",
        "topic": "cafeteraiot/water_level",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "73d49c9cfad6f8d1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 980,
        "y": 960,
        "wires": [
            [
                "bdb3e53b0a576aa7"
            ]
        ]
    },
    {
        "id": "f4697f2f73f95a25",
        "type": "mqtt out",
        "z": "49b807f2f917cbb4",
        "g": "dfa216ac312c3f76",
        "name": "",
        "topic": "cafeteraiot/FOTA",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "73d49c9cfad6f8d1",
        "x": 490,
        "y": 1400,
        "wires": []
    },
    {
        "id": "57907104c92434a0",
        "type": "inject",
        "z": "49b807f2f917cbb4",
        "g": "dfa216ac312c3f76",
        "name": "Check FOTA",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"update\":\"true\"}",
        "payloadType": "json",
        "x": 150,
        "y": 1400,
        "wires": [
            [
                "f4697f2f73f95a25"
            ]
        ]
    },
    {
        "id": "4f4b698de11cafbd",
        "type": "mqtt in",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "",
        "topic": "cafeteraiot/FOTA",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "73d49c9cfad6f8d1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 1000,
        "wires": [
            [
                "cd2a6cb8dc8cc7df"
            ]
        ]
    },
    {
        "id": "cd2a6cb8dc8cc7df",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "+date",
        "func": "msg.payload[\"date\"] = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1000,
        "wires": [
            [
                "8a36e24d2e2319f6"
            ]
        ]
    },
    {
        "id": "8a36e24d2e2319f6",
        "type": "mongodb out",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "mongodb": "7adc7b85c0b61e8a",
        "name": "",
        "collection": "FOTA",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 610,
        "y": 1000,
        "wires": []
    },
    {
        "id": "63333fd3893d10f7",
        "type": "comment",
        "z": "49b807f2f917cbb4",
        "g": "d4afa3cb5023d788",
        "name": "Check for FOTA update every x min",
        "info": "",
        "x": 1080,
        "y": 360,
        "wires": []
    },
    {
        "id": "62bb51577c51bf9c",
        "type": "mqtt out",
        "z": "49b807f2f917cbb4",
        "g": "dfa216ac312c3f76",
        "name": "",
        "topic": "cafeteraiot/FOTA/freq",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "73d49c9cfad6f8d1",
        "x": 500,
        "y": 1460,
        "wires": []
    },
    {
        "id": "1492375f4ed84885",
        "type": "inject",
        "z": "49b807f2f917cbb4",
        "g": "dfa216ac312c3f76",
        "name": "Set check frequency",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"freq\":60}",
        "payloadType": "json",
        "x": 170,
        "y": 1460,
        "wires": [
            [
                "62bb51577c51bf9c"
            ]
        ]
    },
    {
        "id": "2f97eabbab25f01f",
        "type": "mqtt in",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "",
        "topic": "cafeteraiot/FOTA/freq",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "73d49c9cfad6f8d1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 1060,
        "wires": [
            [
                "ca7714ab4c20a9c9"
            ]
        ]
    },
    {
        "id": "ca7714ab4c20a9c9",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "name": "+date",
        "func": "msg.payload[\"date\"] = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1060,
        "wires": [
            [
                "ce3c85eb54442ebb"
            ]
        ]
    },
    {
        "id": "ce3c85eb54442ebb",
        "type": "mongodb out",
        "z": "49b807f2f917cbb4",
        "g": "89c61fe7b44f9f98",
        "mongodb": "7adc7b85c0b61e8a",
        "name": "",
        "collection": "FOTA_freq",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 630,
        "y": 1060,
        "wires": []
    },
    {
        "id": "3d2d952fc08e7577",
        "type": "inject",
        "z": "49b807f2f917cbb4",
        "g": "d4afa3cb5023d788",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 970,
        "y": 420,
        "wires": [
            [
                "bd7e41d1909d3eb4"
            ]
        ]
    },
    {
        "id": "bd7e41d1909d3eb4",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "d4afa3cb5023d788",
        "name": "Freq actual",
        "func": "msg.payload = {};\nmsg.sort = { \"payload.date\": -1 };\nmsg.limit = 1;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 420,
        "wires": [
            [
                "3a8e2d473198228f"
            ]
        ]
    },
    {
        "id": "3a8e2d473198228f",
        "type": "mongodb in",
        "z": "49b807f2f917cbb4",
        "g": "d4afa3cb5023d788",
        "mongodb": "7adc7b85c0b61e8a",
        "name": "",
        "collection": "FOTA_freq",
        "operation": "find",
        "x": 1370,
        "y": 420,
        "wires": [
            [
                "75e0ad0cc6caef68"
            ]
        ]
    },
    {
        "id": "75e0ad0cc6caef68",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "d4afa3cb5023d788",
        "name": "Ultima comprobacion",
        "func": "msg.freq = msg.payload[0].payload.freq;\nmsg.payload = {};\nmsg.sort = { \"payload.date\": -1 };\nmsg.limit = 1;\nreturn msg;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 480,
        "wires": [
            [
                "fd6cd11afdf7487a"
            ]
        ]
    },
    {
        "id": "fd6cd11afdf7487a",
        "type": "mongodb in",
        "z": "49b807f2f917cbb4",
        "g": "d4afa3cb5023d788",
        "mongodb": "7adc7b85c0b61e8a",
        "name": "",
        "collection": "FOTA",
        "operation": "find",
        "x": 1270,
        "y": 480,
        "wires": [
            [
                "eceb338d5df69a1f"
            ]
        ]
    },
    {
        "id": "eceb338d5df69a1f",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "d4afa3cb5023d788",
        "name": "Comprobar si ultima update >= freq",
        "func": "const freq = msg.freq;\nconst lastTime = msg.payload[0].payload.date;\nconst currentTime = new Date();\n// @ts-ignore\nconst timeDiff = (currentTime - lastTime) / 60000;\nif(timeDiff >= freq){\n    msg.payload = {\"update\": \"true\"};\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 560,
        "wires": [
            [
                "4b233460fa2e0cd5"
            ]
        ]
    },
    {
        "id": "4b233460fa2e0cd5",
        "type": "mqtt out",
        "z": "49b807f2f917cbb4",
        "g": "d4afa3cb5023d788",
        "name": "",
        "topic": "cafeteraiot/FOTA",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "73d49c9cfad6f8d1",
        "x": 1410,
        "y": 560,
        "wires": []
    },
    {
        "id": "a1b685dfd6c33db0",
        "type": "ui_chart",
        "z": "49b807f2f917cbb4",
        "g": "4f9f69e37aaca6f0",
        "name": "",
        "group": "85d4fb6d3172e56e",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Historico",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1460,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "a37b54c738ef2bee",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "4f9f69e37aaca6f0",
        "name": "genera datos gráfica",
        "func": "var arraytemp=[];\n\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n{\n    for (var i = 0; i < msg.payload.length; i++) { // añade datos a los arrays\n        arraytemp.push({x : msg.payload[i].payload.date.getTime() , y : msg.payload[i].payload.temp});\n    }\n\n    msg.payload = [{\n        \"series\": [\"Temperatura\"],\n        \"data\": [arraytemp],\n        \"labels\": [\"\"]\n    }];\n}\nelse  // si no hay registros borra la gráfica anterior\nmsg.payload = [];\n\n\nreturn msg; \n    ",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1100,
        "wires": [
            [
                "a1b685dfd6c33db0"
            ]
        ]
    },
    {
        "id": "fb82538a8cd4767e",
        "type": "mongodb in",
        "z": "49b807f2f917cbb4",
        "g": "4f9f69e37aaca6f0",
        "mongodb": "7adc7b85c0b61e8a",
        "name": "",
        "collection": "temp",
        "operation": "find",
        "x": 1390,
        "y": 1020,
        "wires": [
            [
                "a37b54c738ef2bee"
            ]
        ]
    },
    {
        "id": "d4a2b31e3d478296",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "4f9f69e37aaca6f0",
        "name": "Ultimas x muestras",
        "func": "msg.payload = {};\nmsg.sort = { \"payload.date\": -1 };\nmsg.limit = 3000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 1020,
        "wires": [
            [
                "fb82538a8cd4767e"
            ]
        ]
    },
    {
        "id": "3c5be6b4546e6232",
        "type": "inject",
        "z": "49b807f2f917cbb4",
        "g": "4f9f69e37aaca6f0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 970,
        "y": 1020,
        "wires": [
            [
                "d4a2b31e3d478296"
            ]
        ]
    },
    {
        "id": "0dd60573115b84a2",
        "type": "ui_switch",
        "z": "49b807f2f917cbb4",
        "g": "4f9f69e37aaca6f0",
        "name": "",
        "label": "switch",
        "tooltip": "",
        "group": "85d4fb6d3172e56e",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "payload",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 930,
        "y": 1160,
        "wires": [
            [
                "083e86da7f82b985",
                "32e0787c9d5db177"
            ]
        ]
    },
    {
        "id": "083e86da7f82b985",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "4f9f69e37aaca6f0",
        "name": "function 8",
        "func": "var status = msg.payload;\nvar coffee_s = global.get(\"coffee_status\");\nif(coffee_s == \"on\" && status){\n\n}else if (coffee_s == \"on\" && !status){\n    msg.payload = {\"status\": \"off\"};\n    return msg;\n}else if(coffee_s == \"off\" && status){\n    msg.payload = {\"status\": \"on\"};\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1160,
        "wires": [
            [
                "698841a72516dc35"
            ]
        ]
    },
    {
        "id": "698841a72516dc35",
        "type": "mqtt out",
        "z": "49b807f2f917cbb4",
        "g": "4f9f69e37aaca6f0",
        "name": "",
        "topic": "cafeteraiot/coffee/status",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "73d49c9cfad6f8d1",
        "x": 1410,
        "y": 1160,
        "wires": []
    },
    {
        "id": "4f1c288ac6b4b8fc",
        "type": "ui_led",
        "z": "49b807f2f917cbb4",
        "g": "4f9f69e37aaca6f0",
        "order": 2,
        "group": "85d4fb6d3172e56e",
        "width": "3",
        "height": "3",
        "label": "Status",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 1470,
        "y": 1220,
        "wires": []
    },
    {
        "id": "dc2a55d584d4e01c",
        "type": "inject",
        "z": "49b807f2f917cbb4",
        "g": "4f9f69e37aaca6f0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 970,
        "y": 1220,
        "wires": [
            [
                "32e0787c9d5db177",
                "c7d7b3ddc630e804"
            ]
        ]
    },
    {
        "id": "32e0787c9d5db177",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "4f9f69e37aaca6f0",
        "name": "function 9",
        "func": "var status = global.get(\"coffee_status\");\nif(status == \"on\"){\n    msg.payload = true;\n    return msg\n}else if(status == \"off\"){\n    msg.payload = false;\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1220,
        "wires": [
            [
                "4f1c288ac6b4b8fc"
            ]
        ]
    },
    {
        "id": "cfc9572a76fede45",
        "type": "ui_text",
        "z": "49b807f2f917cbb4",
        "g": "4f9f69e37aaca6f0",
        "group": "85d4fb6d3172e56e",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 1260,
        "wires": []
    },
    {
        "id": "c7d7b3ddc630e804",
        "type": "function",
        "z": "49b807f2f917cbb4",
        "g": "4f9f69e37aaca6f0",
        "name": "function 10",
        "func": "var status = global.get(\"pot_status\");\nmsg.payload = \"pot status: \" + status;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1260,
        "wires": [
            [
                "cfc9572a76fede45"
            ]
        ]
    },
    {
        "id": "d6adc1c2153d25a9",
        "type": "ui_spacer",
        "z": "49b807f2f917cbb4",
        "name": "spacer",
        "group": "85d4fb6d3172e56e",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "73d49c9cfad6f8d1",
        "type": "mqtt-broker",
        "name": "Mio_WiFi",
        "broker": "192.168.31.195",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "7adc7b85c0b61e8a",
        "type": "mongodb",
        "hostname": "172.18.0.2",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "CafeteraIOT",
        "name": ""
    },
    {
        "id": "85d4fb6d3172e56e",
        "type": "ui_group",
        "name": "CafeteraIOT",
        "tab": "99463d750a082936",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a2c03ae15197aa2c",
        "type": "telegram bot",
        "botname": "CafeteraIOT_bot",
        "usernames": "Roberto_B10",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "99463d750a082936",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]